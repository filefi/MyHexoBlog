<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>正经人谁写日记</title>
  <icon>https://ifelif.cn/icon.png</icon>
  
  <link href="https://ifelif.cn/atom.xml" rel="self"/>
  
  <link href="https://ifelif.cn/"/>
  <updated>2022-05-31T09:04:04.258Z</updated>
  <id>https://ifelif.cn/</id>
  
  <author>
    <name>filefi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gobyexample 学习笔记</title>
    <link href="https://ifelif.cn/2022/learn_gobyexample/"/>
    <id>https://ifelif.cn/2022/learn_gobyexample/</id>
    <published>2022-05-28T16:10:21.000Z</published>
    <updated>2022-05-31T09:04:04.258Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h1&gt;&lt;p&gt;我们的第一个程序将打印传说中的 “hello world” 消息，右边是完整的程序代码。&lt;/p&gt;
&lt;pre class=&quot;language-go&quot; data-language=&quot;go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; main

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要运行这个程序，将这些代码放到 &lt;code&gt;hello-world.go&lt;/code&gt; 中并且使用 &lt;code&gt;go run&lt;/code&gt; 命令。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go run hello-world.go
hello world&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有时候我们想将我们的程序编译成二进制文件。我们可以通过 go build 命来达到目的。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go build hello-world.go
$ &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt;
hello-world	hello-world.go&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后我们可以直接运行这个二进制文件。&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ./hello-world
hello world&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Golang" scheme="https://ifelif.cn/categories/Golang/"/>
    
    
    <category term="Golang" scheme="https://ifelif.cn/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Ansible 用户指南</title>
    <link href="https://ifelif.cn/2022/ansible_user_guide/"/>
    <id>https://ifelif.cn/2022/ansible_user_guide/</id>
    <published>2022-05-16T16:01:21.000Z</published>
    <updated>2022-05-31T09:04:04.234Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;安装指南&quot;&gt;&lt;a href=&quot;#安装指南&quot; class=&quot;headerlink&quot; title=&quot;安装指南&quot;&gt;&lt;/a&gt;安装指南&lt;/h1&gt;&lt;h2 id=&quot;安装-Ansible&quot;&gt;&lt;a href=&quot;#安装-Ansible&quot; class=&quot;headerlink&quot; title=&quot;安装 Ansible&quot;&gt;&lt;/a&gt;安装 Ansible&lt;/h2&gt;&lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;h4 id=&quot;控制节点要求-（Control-node-requirements）&quot;&gt;&lt;a href=&quot;#控制节点要求-（Control-node-requirements）&quot; class=&quot;headerlink&quot; title=&quot;控制节点要求 （Control node requirements）&quot;&gt;&lt;/a&gt;控制节点要求 （&lt;a href=&quot;https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#id8&quot;&gt;Control node requirements&lt;/a&gt;）&lt;/h4&gt;&lt;p&gt;除Windows外，其他任何安装了 Python 3.8 或更新版本的计算机都能成为控制节点，包括 RHEL，Debian，CentOS 以及任何 BSD 等等。&lt;/p&gt;
&lt;h4 id=&quot;被管理节点要求-（Managed-node-requirements）&quot;&gt;&lt;a href=&quot;#被管理节点要求-（Managed-node-requirements）&quot; class=&quot;headerlink&quot; title=&quot;被管理节点要求 （Managed node requirements）&quot;&gt;&lt;/a&gt;被管理节点要求 （&lt;a href=&quot;https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#id9&quot;&gt;Managed node requirements&lt;/a&gt;）&lt;/h4&gt;&lt;p&gt;对于大多数被管理的节点，Ansible使用SSH和SFTP来创建连接。但如果SFTP不可用，也可以使用SCP。同时，还需要运行Python。&lt;/p&gt;
&lt;h3 id=&quot;选择要安装的Ansible版本&quot;&gt;&lt;a href=&quot;#选择要安装的Ansible版本&quot; class=&quot;headerlink&quot; title=&quot;选择要安装的Ansible版本&quot;&gt;&lt;/a&gt;选择要安装的Ansible版本&lt;/h3&gt;&lt;p&gt;有2种方式安装Ansible：S&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用各操作系统的包管理器安装预编译的Ansible包&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;pip&lt;/code&gt;安装Ansible&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用pip安装并升级Ansible&quot;&gt;&lt;a href=&quot;#使用pip安装并升级Ansible&quot; class=&quot;headerlink&quot; title=&quot;使用pip安装并升级Ansible&quot;&gt;&lt;/a&gt;使用&lt;code&gt;pip&lt;/code&gt;安装并升级Ansible&lt;/h3&gt;&lt;h4 id=&quot;使用pip安装Ansible&quot;&gt;&lt;a href=&quot;#使用pip安装Ansible&quot; class=&quot;headerlink&quot; title=&quot;使用pip安装Ansible&quot;&gt;&lt;/a&gt;使用&lt;code&gt;pip&lt;/code&gt;安装Ansible&lt;/h4&gt;&lt;p&gt;安装Ansible：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ python -m pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --user ansible&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装paramiko：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ python -m pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --user paramiko&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全局安装Ansible：&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; python -m pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; ansible&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Running &lt;code&gt;pip&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt; will make global changes to the system. Since &lt;code&gt;pip&lt;/code&gt; does not coordinate with system package managers, it could make changes to your system that leaves it in an inconsistent or non-functioning state. This is particularly true for macOS. Installing with &lt;code&gt;--user&lt;/code&gt; is recommended unless you understand fully the implications of modifying global files on the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;在虚拟环境中使用pip安装Ansible&quot;&gt;&lt;a href=&quot;#在虚拟环境中使用pip安装Ansible&quot; class=&quot;headerlink&quot; title=&quot;在虚拟环境中使用pip安装Ansible&quot;&gt;&lt;/a&gt;在虚拟环境中使用&lt;code&gt;pip&lt;/code&gt;安装Ansible&lt;/h4&gt;&lt;pre class=&quot;language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ python -m virtualenv ansible  &lt;span class=&quot;token comment&quot;&gt;# Create a virtualenv if one does not already exist&lt;/span&gt;
$ &lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ansible/bin/activate   &lt;span class=&quot;token comment&quot;&gt;# Activate the virtual environment&lt;/span&gt;
$ python -m pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; ansible&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;高版本的Python3都自带了虚拟环境模块&lt;code&gt;venv&lt;/code&gt;，不需要单独安装&lt;code&gt;virtualenv&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://ifelif.cn/categories/Linux/"/>
    
    
    <category term="linux" scheme="https://ifelif.cn/tags/linux/"/>
    
    <category term="ansible" scheme="https://ifelif.cn/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>《Docker 从入门到实践》学习笔记</title>
    <link href="https://ifelif.cn/2022/docker_practice/"/>
    <id>https://ifelif.cn/2022/docker_practice/</id>
    <published>2022-04-28T15:56:21.000Z</published>
    <updated>2022-05-31T09:04:04.246Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是-Docker&quot;&gt;&lt;a href=&quot;#什么是-Docker&quot; class=&quot;headerlink&quot; title=&quot;什么是 Docker&quot;&gt;&lt;/a&gt;什么是 Docker&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; 使用 &lt;code&gt;Google&lt;/code&gt; 公司推出的 &lt;a href=&quot;https://golang.google.cn/&quot;&gt;Go 语言&lt;/a&gt; 进行开发实现，基于 &lt;code&gt;Linux&lt;/code&gt; 内核的 &lt;a href=&quot;https://zh.wikipedia.org/wiki/Cgroups&quot;&gt;cgroup&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_namespaces&quot;&gt;namespace&lt;/a&gt;，以及 &lt;a href=&quot;https://docs.docker.com/storage/storagedriver/overlayfs-driver/&quot;&gt;OverlayFS&lt;/a&gt; 类的 &lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt; 等技术，对进程进行封装隔离，属于 &lt;a href=&quot;https://en.wikipedia.org/wiki/Operating-system-level_virtualization&quot;&gt;操作系统层面的虚拟化技术&lt;/a&gt;。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/docker_practice/docker-on-linux-16488874880822.png&quot; alt=&quot;Docker在Linux中的架构&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;传统虚拟机-VS-Docker&quot;&gt;&lt;a href=&quot;#传统虚拟机-VS-Docker&quot; class=&quot;headerlink&quot; title=&quot;传统虚拟机 VS Docker&quot;&gt;&lt;/a&gt;传统虚拟机 VS Docker&lt;/h2&gt;&lt;p&gt;传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/docker_practice/vm.png&quot; alt=&quot;传统虚拟机&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/docker_practice/docker.png&quot; alt=&quot;Docker&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://ifelif.cn/categories/Docker/"/>
    
    
    <category term="CNCF" scheme="https://ifelif.cn/tags/CNCF/"/>
    
    <category term="Docker" scheme="https://ifelif.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Nginx小记</title>
    <link href="https://ifelif.cn/2022/some_pieces_of_nginx/"/>
    <id>https://ifelif.cn/2022/some_pieces_of_nginx/</id>
    <published>2022-04-14T15:41:21.000Z</published>
    <updated>2022-05-31T09:04:04.258Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;nginx及其衍生版本&quot;&gt;&lt;a href=&quot;#nginx及其衍生版本&quot; class=&quot;headerlink&quot; title=&quot;nginx及其衍生版本&quot;&gt;&lt;/a&gt;nginx及其衍生版本&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;nginx开源版：&lt;a href=&quot;http://nginx.org/&quot;&gt;http://nginx.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nginx plus 商业版: &lt;a href=&quot;https://www.nginx.com/&quot;&gt;https://www.nginx.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;openresty: &lt;a href=&quot;http://openresty.org/&quot;&gt;http://openresty.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tengine: &lt;a href=&quot;http://tengine.taobao.org/&quot;&gt;http://tengine.taobao.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;nginx默认目录结构&quot;&gt;&lt;a href=&quot;#nginx默认目录结构&quot; class=&quot;headerlink&quot; title=&quot;nginx默认目录结构&quot;&gt;&lt;/a&gt;nginx默认目录结构&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;logs/&lt;/code&gt;：日志目录；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conf/&lt;/code&gt;：配置文件目录；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html/&lt;/code&gt;：静态资源目录；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sbin/&lt;/code&gt;：存放nginx可执行文件；&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;nginx基础配置&quot;&gt;&lt;a href=&quot;#nginx基础配置&quot; class=&quot;headerlink&quot; title=&quot;nginx基础配置&quot;&gt;&lt;/a&gt;nginx基础配置&lt;/h1&gt;&lt;h2 id=&quot;nginx最小配置&quot;&gt;&lt;a href=&quot;#nginx最小配置&quot; class=&quot;headerlink&quot; title=&quot;nginx最小配置&quot;&gt;&lt;/a&gt;nginx最小配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;worker_processes&lt;/code&gt; worker 进程数，根据CPU核心数进行配置；&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-nginx&quot; data-language=&quot;nginx&quot;&gt;&lt;code class=&quot;language-nginx&quot;&gt;&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;user&lt;/span&gt;  nginx&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;worker_processes&lt;/span&gt;  auto&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;error_log&lt;/span&gt;  /var/log/nginx/error.log notice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;pid&lt;/span&gt;        /var/run/nginx.pid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;events&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;worker_connections&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;


&lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;http&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;include&lt;/span&gt;       /etc/nginx/mime.types&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;default_type&lt;/span&gt;  application/octet-stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;log_format&lt;/span&gt;  main  &lt;span class=&quot;token string&quot;&gt;&#39;&lt;span class=&quot;token variable&quot;&gt;$remote_addr&lt;/span&gt; - &lt;span class=&quot;token variable&quot;&gt;$remote_user&lt;/span&gt; [&lt;span class=&quot;token variable&quot;&gt;$time_local]&lt;/span&gt; &quot;&lt;span class=&quot;token variable&quot;&gt;$request&lt;/span&gt;&quot; &#39;&lt;/span&gt;
                      &lt;span class=&quot;token string&quot;&gt;&#39;&lt;span class=&quot;token variable&quot;&gt;$status&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$body_bytes_sent&lt;/span&gt; &quot;&lt;span class=&quot;token variable&quot;&gt;$http_referer&lt;/span&gt;&quot; &#39;&lt;/span&gt;
                      &lt;span class=&quot;token string&quot;&gt;&#39;&quot;&lt;span class=&quot;token variable&quot;&gt;$http_user_agent&lt;/span&gt;&quot; &quot;&lt;span class=&quot;token variable&quot;&gt;$http_x_forwarded_for&lt;/span&gt;&quot;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;access_log&lt;/span&gt;  /var/log/nginx/access.log  main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;sendfile&lt;/span&gt;        &lt;span class=&quot;token boolean&quot;&gt;on&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;keepalive_timeout&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;65&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
        &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;listen&lt;/span&gt;       &lt;span class=&quot;token number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;server_name&lt;/span&gt;  localhost&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;location&lt;/span&gt; /&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;root&lt;/span&gt;   /usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;index&lt;/span&gt;  index.html index.htm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;#error_page  404              /404.html;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;# redirect server error pages to the static page /50x.html&lt;/span&gt;
        &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;error_page&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;502&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;503&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;504&lt;/span&gt;  /50x.html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;location&lt;/span&gt; = /50x.html&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;&amp;#123;&lt;/span&gt;
            &lt;span class=&quot;token directive&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;root&lt;/span&gt;   /usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://ifelif.cn/categories/Linux/"/>
    
    
    <category term="linux" scheme="https://ifelif.cn/tags/linux/"/>
    
    <category term="nginx" scheme="https://ifelif.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux Firewall 学习笔记</title>
    <link href="https://ifelif.cn/2022/linux_firewall/"/>
    <id>https://ifelif.cn/2022/linux_firewall/</id>
    <published>2022-04-10T08:35:21.000Z</published>
    <updated>2022-05-31T09:04:04.258Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;iptables&quot;&gt;&lt;a href=&quot;#iptables&quot; class=&quot;headerlink&quot; title=&quot;iptables&quot;&gt;&lt;/a&gt;iptables&lt;/h1&gt;&lt;h2 id=&quot;netfilter-和-iptables&quot;&gt;&lt;a href=&quot;#netfilter-和-iptables&quot; class=&quot;headerlink&quot; title=&quot;netfilter 和 iptables&quot;&gt;&lt;/a&gt;netfilter 和 iptables&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;netfilter：内核态，即不以文件的形式存在的防火墙。&lt;/li&gt;
&lt;li&gt;iptables：用户态，在&lt;code&gt;/sbin/iptables&lt;/code&gt;存在的防火墙。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;防火墙的分类&quot;&gt;&lt;a href=&quot;#防火墙的分类&quot; class=&quot;headerlink&quot; title=&quot;防火墙的分类&quot;&gt;&lt;/a&gt;防火墙的分类&lt;/h2&gt;&lt;p&gt;按保护范围划分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机防火墙:服务范围为当前一台主机&lt;/li&gt;
&lt;li&gt;网络防火墙:服务范围为防火墙一侧的局域网&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-Tables&quot;&gt;&lt;a href=&quot;#4-Tables&quot; class=&quot;headerlink&quot; title=&quot;4 Tables&quot;&gt;&lt;/a&gt;4 Tables&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;filter&lt;/li&gt;
&lt;li&gt;nat&lt;/li&gt;
&lt;li&gt;mangle&lt;/li&gt;
&lt;li&gt;raw&lt;/li&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-Chains&quot;&gt;&lt;a href=&quot;#5-Chains&quot; class=&quot;headerlink&quot; title=&quot;5 Chains&quot;&gt;&lt;/a&gt;5 Chains&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PREROUTING&lt;/li&gt;
&lt;li&gt;INPUT&lt;/li&gt;
&lt;li&gt;FORWARD&lt;/li&gt;
&lt;li&gt;OUTPUT&lt;/li&gt;
&lt;li&gt;POSTROUTING&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://ifelif.cn/categories/Linux/"/>
    
    
    <category term="linux" scheme="https://ifelif.cn/tags/linux/"/>
    
    <category term="iptables" scheme="https://ifelif.cn/tags/iptables/"/>
    
    <category term="firewalld" scheme="https://ifelif.cn/tags/firewalld/"/>
    
    <category term="nftables" scheme="https://ifelif.cn/tags/nftables/"/>
    
  </entry>
  
  <entry>
    <title>tkinter 一例</title>
    <link href="https://ifelif.cn/2022/entry%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%EF%BC%8Ctext%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%BE%97%E5%91%BD%E4%BB%A4%E8%BE%93%E5%87%BA/"/>
    <id>https://ifelif.cn/2022/entry%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%EF%BC%8Ctext%E5%AE%9E%E6%97%B6%E8%8E%B7%E5%BE%97%E5%91%BD%E4%BB%A4%E8%BE%93%E5%87%BA/</id>
    <published>2022-02-16T15:56:21.000Z</published>
    <updated>2022-05-31T09:04:04.258Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre class=&quot;language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; tkinter &lt;span</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ifelif.cn/categories/Python/"/>
    
    
    <category term="Python" scheme="https://ifelif.cn/tags/Python/"/>
    
    <category term="tkinter" scheme="https://ifelif.cn/tags/tkinter/"/>
    
    <category term="GUI" scheme="https://ifelif.cn/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>Python tkinter 布局管理</title>
    <link href="https://ifelif.cn/2022/tkinter_geometry_manager/"/>
    <id>https://ifelif.cn/2022/tkinter_geometry_manager/</id>
    <published>2022-02-16T15:56:21.000Z</published>
    <updated>2022-05-31T09:04:04.258Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文讲述如何使用 tkinter 的布局管理 (被称作 layout managers 或 geometry managers)。tkinter 有三种布局管理方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pack&lt;/li&gt;
&lt;li&gt;place&lt;/li&gt;
&lt;li&gt;grid&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，这三种布局管理在同一个 master window 里一定不该被混用！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;布局管理有以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在屏幕上排列控件，包括确定组件的大小和位置&lt;/li&gt;
&lt;li&gt;注册窗口控件到底层窗口系统&lt;/li&gt;
&lt;li&gt;管理控件在屏幕上的显示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然控件自己也可以指定大小和对齐方式等信息， 但最终的控件大小及位置还是由布局管理决定的。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ifelif.cn/categories/Python/"/>
    
    
    <category term="Python" scheme="https://ifelif.cn/tags/Python/"/>
    
    <category term="tkinter" scheme="https://ifelif.cn/tags/tkinter/"/>
    
    <category term="GUI" scheme="https://ifelif.cn/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>CheatEngine Tutorial</title>
    <link href="https://ifelif.cn/2022/cheat_engine_tutorial/"/>
    <id>https://ifelif.cn/2022/cheat_engine_tutorial/</id>
    <published>2022-02-16T13:41:21.000Z</published>
    <updated>2022-05-31T09:04:04.234Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;CheatEngine-Tutorial&quot;&gt;&lt;a href=&quot;#CheatEngine-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;CheatEngine Tutorial&quot;&gt;&lt;/a&gt;CheatEngine Tutorial&lt;/h1&gt;&lt;h2 id=&quot;Step-1&quot;&gt;&lt;a href=&quot;#Step-1&quot; class=&quot;headerlink&quot; title=&quot;Step 1&quot;&gt;&lt;/a&gt;Step 1&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2022/cheat_engine_tutorial/image-20220215145201605.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;pre class=&quot;language-text&quot; data-language=&quot;text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Welcome to the Cheat Engine Tutorial (v3.6)

This tutorial will teach you the basics of cheating in video games. It will also show you foundational aspects of using Cheat Engine (or CE for short). Follow the steps below to get started.

1: Open Cheat Engine if it currently isn&#39;t running.
2: Click on the &quot;Open Process&quot; icon (it&#39;s the top-left icon with the computer on it, below &quot;File&quot;.).
3: With the Process List window now open, look for this tutorial&#39;s process in the list. It will look something like &quot;00001F98-Tutorial-x86_64.exe&quot; or &quot;0000047C-Tutorial-i386.exe&quot;. (The first 8 numbers/letters will probably be different.)
4: Once you&#39;ve found the process, click on it to select it, then click the &quot;Open&quot; button. (Don&#39;t worry about all the other buttons right now. You can learn about them later if you&#39;re interested.)

Congratulations! If you did everything correctly, the process window should be gone with Cheat Engine now attached to the tutorial (you will see the process name towards the top-center of CE).

Click the &quot;Next&quot; button below to continue, or fill in the password and click the &quot;OK&quot; button to proceed to that step.)

If you&#39;re having problems, simply head over to forum.cheatengine.org, then click on &quot;Tutorials&quot; to view beginner-friendly guides!&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h3&gt;&lt;h4 id=&quot;步骤1：选择要附加的进程&quot;&gt;&lt;a href=&quot;#步骤1：选择要附加的进程&quot; class=&quot;headerlink&quot; title=&quot;步骤1：选择要附加的进程&quot;&gt;&lt;/a&gt;步骤1：选择要附加的进程&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2022/cheat_engine_tutorial/image-20220215145836858.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/cheat_engine_tutorial/image-20220215150314077.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="PWN" scheme="https://ifelif.cn/categories/PWN/"/>
    
    
    <category term="pwn" scheme="https://ifelif.cn/tags/pwn/"/>
    
    <category term="reverse" scheme="https://ifelif.cn/tags/reverse/"/>
    
    <category term="re" scheme="https://ifelif.cn/tags/re/"/>
    
  </entry>
  
</feed>
